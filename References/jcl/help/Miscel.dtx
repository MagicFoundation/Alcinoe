@@SetDisplayResolution
<GROUP Miscellaneous>
Summary:
  Changes the resolution of the screen.
Description:
  Dynamically changes the resolution (width and height) of the visible device
  surface of the default display device. In simpler terms, changes the width and
  height of the screen. If the function succeeds the system automatically sends a
  WM_DISPLAYCHANGE message to all running applications.
Parameters:
  XRes - New Width of the screen, in pixels.
  YRes - New Height of the screen, in pixels.
Result:
  Internally the ChangeDisplaySettings function is used to obtain the result. The possible return values are:
    <TABLE>
Value                   Meaning
----------------------  ---------------------------------------------------------------------------------------------
DISP_CHANGE_SUCCESSFUL  The settings change was successful.
DISP_CHANGE_RESTART     The computer must be restarted in order for the graphics mode to work.
DISP_CHANGE_BADFLAGS    An invalid set of flags was passed in.
DISP_CHANGE_BADPARAM    An invalid parameter was passed in. This can include an invalid flag or combination of flags.
DISP_CHANGE_FAILED      The display driver failed the specified graphics mode.
DISP_CHANGE_BADMODE     The graphics mode is not supported.
DISP_CHANGE_NOTUPDATED  Windows NT/2000: Unable to write settings to the registry.
</TABLE>
Donator:
  John C Molyneux
--------------------------------------------------------------------------------
@@CreateProcAsUserEx
<GROUP Miscellaneous>
Summary:
  Spawns a new process in the context of the specified user account.
Description:
  CreateProcessAsUserEx launches a new process in the context of the specified user.
  This user does not neccessarily have to be the same user as the currently logged in
  user. You can use this function to run a child process in an adminstrative context,
  although the calling process is running in a normal (i.e.:restricted) user context.
Parameters:
  UserDomain - Name of the domain the user account is contained in. If this parameter is '.', then the procedure will search only the local account database to look up the user account. If the parameter is nil, then the procedure will first search the local account database and then the trusted domain account databases until the specified account is found.
  UserName - The name of the user account the new process is to be run in.
  Password - The password for the specified user account.
  CommandLine - This string specifies the command line for the application to be executed.
  Environment - Points to an environment block for the new process. If this parameter is nil, the new process uses the environment of the calling process. You can create a new environment block using the CreateEnvironmentBlock function.
See also:
  CreateProcAsUser
  CreateEnvironmentBlock
Donator:
  Peter Friese
--------------------------------------------------------------------------------
@@CreateProcAsUser
<GROUP Miscellaneous>
Summary:
  Spawns a new process in the context of the specified user account.
Description:
  CreateProcessAsUserEx launches a new process in the context of the specified user.
  This user does not neccessarily have to be the same user as the currently logged in
  user. You can use this function to run a child process in an adminstrative context,
  although the calling process is running in a normal (i.e.:restricted) user context.
Parameters:
  UserDomain - Name of the domain the user account is contained in. If this parameter is '.', then the procedure will search only the local account database to look up the user account. If the parameter is nil, then the procedure will first search the local account database and then the trusted domain account databases until the specified account is found.
  UserName - The name of the user account the new process is to be run in.
  Password - The password for the specified user account.
  CommandLine - This string specifies the command line for the application to be executed.
See also:
  CreateProcAsUserEx
  CreateEnvironmentBlock
Donator:
  Peter Friese
--------------------------------------------------------------------------------
@@EJclCreateProcessError
<GROUP Miscellaneous>
Summary:
  Class for exceptions raised due to errors in the CreateProcAsUser / CreateProcAsUserEx procedure pair.
Donator:
  Peter Friese
--------------------------------------------------------------------------------
@@LogOffOS
<GROUP Miscellaneous>
Summary:
  Shuts down all running processes and logs the user off.
Description:
  This function shuts down all running processes and afterwards logs the user off. On
  Windows this function utilizes the ExitWindowsEx function call.
Result:
  False if the function was not able to log off the user.
See also:
  ExitWindows
  PowerOffOS
  ShutDownOS
  RebootOS
Donator:
  Team JCL
--------------------------------------------------------------------------------
@@ExitWindows
<GROUP Miscellaneous>
Summary:
  Exits windows
Description:
  This function exits windows in a way defined by the ExitCode parameter.
Parameters:
  ExitCode: Either EWX_LOGOFF, EWX_POWEROFF, EWX_REBOOT or EWX_SHUTDOWN.
Result:
  False if the function was not able to shutn down the system and turn the power off.
See also:
  LogOffOS
  PowerOffOS
  ShutDownOS
  RebootOS
Donator:
  Team JCL
--------------------------------------------------------------------------------
@@ShutDownOS
<GROUP Miscellaneous>
Summary:
  Shuts down the operating system.
Description:
  This function shuts down the operating system.
Result:
  False if the function was not able to shutn down the system and turn the power off.
See also:
  ExitWindows
  LogOffOS
  PowerOffOS
  ShutDownOS
  RebootOS
Donator:
  Team JCL
--------------------------------------------------------------------------------
@@PowerOffOS
<GROUP Miscellaneous>
Summary:
  Shuts down the system and turns off the power.
Description:
  This function shuts down the system and turns the power off (the hardware and the
  operating system must support the power off feature).
Result:
  False if the function was not able to shutn down the system and turn the power off.
See also:
  ExitWindows
  LogOffOS
  PowerOffOS
  ShutDownOS
  RebootOS
Donator:
  Team JCL
--------------------------------------------------------------------------------
@@RebootOS
<GROUP Miscellaneous>
Summary:
  Shuts down the system and reboots.
Description:
  This function shuts down the system and initiates a system reboot.
Result:
  False if the function was not able to shutn down the system and turn the power off.
See also:
  ExitWindows
  LogOffOS
  PowerOffOS
  ShutDownOS
  RebootOS
Donator:
  Team JCL
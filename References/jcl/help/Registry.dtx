@@RegistryandInifiles.Inifiles
<GROUP RegistryandInifiles>
<TITLE Ini files>
<TOPICORDER 100>
--------------------------------------------------------------------------------
@@RegistryandInifiles.Registry
<GROUP RegistryandInifiles>
<TITLE Registry>
<TOPICORDER 200>
--------------------------------------------------------------------------------
@@RegDeleteKeyTree
<GROUP RegistryandInifiles.Registry>
Summary:
  Deletes a registry key including all subkeys.
Description:
  RegDeleteKeyTree deletes the specified key under RootKey. This function deletes
  all subkeys first thus working also on Windows NT.
Parameters:
  RootKey - The rootkey from which to delete, one of the HKEY_XXX constants.
  Key - Subkey of rootkey to delete.
Result:
  If the function succeeds it returns True else False.
  The failure may happen somewhere in the recursive deletion leaving you with
  only some remaining keys.
  Think twice before using this function. It will happily delete vital parts
  of the registry without complaining.
Donator:
  Charlie Calvert
--------------------------------------------------------------------------------
@@RegCreateKey
<GROUP RegistryandInifiles.Registry>
Summary:
  Creates and initializes a key.
Description:
  RegCreateKey creates the specified key under the HKEY_CLASSES_ROOT and writes
  the specified value to the default value of this key.
Parameters:
  Key - Subkey of HKEY_CLASSES_ROOT to create.
  Value - The value to write to the default value of the specified key.
Result:
  If the function succeeds it returns ERROR_SUCCESS as defined in Windows.pas. If
  it fails it returns a non-zero error code. You can use the Windows FormatMessage
  API call to get a description for the error code.
Donator:
  Charlie Calvert
--------------------------------------------------------------------------------
@@RegReadBoolDef
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a boolean key from the registry.
Description:
  RegReadBool reads a single boolean value from the registry. If the function fails
  it returns the value specified by Def. The function only accepts key values
  of type REG_DWORD.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
  Def - The value to return in case of failure.
Result:
  The value of the specified key, or the specified default value in case of failure.
See also:
  RegReadIntegerDef
  RegReadStringDef
  RegReadBinaryDef
Donator:
  Marcel van Brakel
--------------------------------------------------------------------------------
@@RegReadIntegerDef
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads an integer key from the registry.
Description:
  RegReadInteger reads a single integer value from the registry. If the function fails
  it returns the specified default value. The function accepts only key values of type
  REG_DWORD.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
  Def - The value to return in case of failure.
Result:
  The value of the specified key, or the specified default value in case of failure.
See also:
  RegReadBoolDef
  RegReadStringDef
  RegReadBinaryDef
Donator:
  Marcel van Brakel
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegReadStringDef
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a string key from the registry.
Description:
  RegReadStringDef reads a single string value from the registry. If the function fails
  it returns the value specified by Def. The function accepts only key values of type
  REG_SZ and REG_EXPAND_SZ.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
  Def - Value to return in case of failure.
Result:
  The value of the specified key, or the specified default value on failure.
See also:
  RegReadBoolDef
  RegReadIntegerDef
  RegReadBinaryDef
Donator:
  Marcel van Brakel
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegReadBinaryDef
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads binary data from the registry.
Description:
  RegReadBinaryDef reads binary data from the registry. If the function fails
  it fills all ValueSize bytes of Value with the specified default value.
  Value is untyped to allow to hand in a variable of any type. ValueSize should
  give the size of Value in bytes. The function accepts only key values of type
  REG_BINARY.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
  Value - Destination for the data of any type.
  ValueSize - Size of Value in bytes.
  Def - Value to fill value with in case of failure.
Result:
  The return value is not the data itself but the amount of data read.
  The value is never bigger than ValueSize.
See also:
  RegReadBoolDef
  RegReadIntegerDef
  RegReadStringDef
Donator:
  Stephane Fillon
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegDeleteEntry
<GROUP RegistryandInifiles.Registry>
Summary:
  Deletes an entry from the registry.
Description:
  RegDeleteEntry deletes a single value from the registry.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to delete.
Result:
  The function return True if it succeeds else False. The most probable
  failure reasons are a nonexistent key or name or insufficient permissions
  on Windows NT.
Donator:
  John C Molyneux
--------------------------------------------------------------------------------
@@RegWriteBool
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes a boolean key to the registry.
Description:
  RegWriteBool writes a single boolean value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
  The value is written as REG_DWORD of either 0 or 1.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteInteger
  RegWriteString
  RegWriteBinary
Donator:
  John C Molyneux
--------------------------------------------------------------------------------
@@RegWriteInteger
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes an integer key to the registry.
Description:
  RegWriteInteger writes a single integer value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteBool
  RegWriteString
  RegWriteBinary
Donator:
  John C Molyneux
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegWriteCardinal
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes an unsigned integer key to the registry.
Description:
  RegWriteCardinal writes a single unsigned integer value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteBool
  RegWriteString
  RegWriteBinary
Donator:
  Anonymous
--------------------------------------------------------------------------------
@@RegWriteInt64
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes an 64 bit integer key to the registry.
Description:
  RegWriteInteger writes a single 64 bit integer value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteUInt64
  RegWriteBool
  RegWriteString
  RegWriteBinary
Donator:
  Anonymous
--------------------------------------------------------------------------------
@@RegWriteUInt64
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes an unsigned 64 bit integer key to the registry.
Description:
  RegWriteInteger writes a single unsigned 64 bit integer value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteInt64
  RegWriteBool
  RegWriteString
  RegWriteBinary
Donator:
  Anonymous
--------------------------------------------------------------------------------
@@RegWriteString
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes a string key to the registry.
Description:
  RegWriteString writes a single string value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteBool
  RegWriteInteger
  RegWriteBinary
Donator:
  John C Molyneux
Contributor:
  Anonymous
@@RegWriteAnsiString
<GROUP RegistryandInifiles.Registry>
<COMBINE RegWriteString>
@@RegWriteWideString
<GROUP RegistryandInifiles.Registry>
<COMBINE RegWriteString>
--------------------------------------------------------------------------------
@@RegWriteMultiString
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes a string key to the registry.
Description:
  RegWriteMultiString writes a single string value to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value to write.
See also:
  RegWriteString
  RegReadMultiString
Donator:
  Anonymous
--------------------------------------------------------------------------------
@@RegWriteBinary
<GROUP RegistryandInifiles.Registry>
Summary:
  Writes binary data to the registry.
Description:
  RegWriteBinary writes binary data to the registry. If the function fails
  it raises an EJclRegistryError exception. The specified Key must already exist.
Parameters:
  RootKey - The rootkey which to write to, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to write.
  Value - Value of any type to write.
  ValueSize - Size of data to write.
See also:
  RegWriteBool
  RegWriteInteger
  RegWriteString
Donator:
  Stephane Fillon
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegReadBool
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a boolean key from the registry.
Description:
  RegReadBool reads a single boolean value from the registry. If the function fails
  it raises an EJclRegistryError exception.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
Result:
  The value of the specified key.
See also:
  RegReadInteger
  RegReadString
  RegReadBinary
Donator:
  John C Molyneux
--------------------------------------------------------------------------------
@@RegReadInteger
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads an integer key from the registry.
Description:
  RegReadInteger reads a single integer value from the registry. If the function fails
  it raises an EJclRegistryError exception.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
Result:
  The value of the specified key.
See also:
  RegReadBool
  RegReadString
  RegReadBinary
Donator:
  John C Molyneux
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegReadString
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a string key from the registry.
Description:
  RegReadString reads a single string value from the registry. If the function fails
  it raises an EJclRegistryError exception.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
Result:
  The value of the specified key.
See also:
  RegReadBool
  RegReadInteger
  RegReadBinary
Donator:
  John C Molyneux
Contributor:
  Anonymous
--------------------------------------------------------------------------------
@@RegReadBinary
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads binary data from the registry.
Description:
  RegReadBinary reads binary data from the registry.
  Value is untyped to allow to hand in a variable of any type. ValueSize should
  give the size of Value in bytes. The function accepts only key values of type
  REG_BINARY. If the function fails it raises an EJclRegistryError exception.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value is located, relative to RootKey.
  Name - Name of the value to read.
  Value - Destination for the data of any type.
  ValueSize - Size of Value in bytes.
Result:
  The return value is not the data itself but the amount of data read.
  The value is never bigger than ValueSize.
See also:
  RegReadBool
  RegReadInteger
  RegReadString
Donator:
  Stephane Fillon
Contributor:
  Anonymous
@@RegReadBinaryDef
<GROUP RegistryandInifiles.Registry>
Donator:
  Anonymous
<COMBINE RegReadBinary>
--------------------------------------------------------------------------------
@@RegReadBinaryAsAnsiString
<GROUP RegistryandInifiles.Registry>
Donator:
  Anonymous
@@RegReadBinaryAsAnsiStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadBinaryAsAnsiString>
--------------------------------------------------------------------------------
@@RegReadBinaryAsWideString
<GROUP RegistryandInifiles.Registry>
Donator:
  Anonymous
@@RegReadBinaryAsWideStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadBinaryAsWideString>
--------------------------------------------------------------------------------
@@UnregisterAutoExec
<GROUP RegistryandInifiles.Registry>
Summary:
  Unregisters the specified application for execution at logon.
Description:
  UnregisterAutoExec unregisters an application that is registered for autoexecution.
  You can use this function to remove an application that was registered as run always,
  or 'run once' if you change your mind (before reboot). If a file is registered
  as 'run once' and the system was rebooted there is no need to unregister because the
  system automatically removes the entry from the registry.
Parameters:
  ExecKind - Specifies how the file was registered. See TExecKind for more information.
  Name - Name of registry value to delete.
Result:
  The return value is that of a RegDeleteEntry except for
  calling UnregisterAutoExec with ekServiceRun or ekServiceRunOnce on Windows NT/2000
  which causes the function to return False and do nothing.
See also:
  RegisterAutoExec
  TExecKind
Donator:
  Marcel van Brakel
--------------------------------------------------------------------------------
@@RegisterAutoExec
<GROUP RegistryandInifiles.Registry>
Summary:
  Registers the specified application for execution at logon.
Description:
  RegisterAutoExec registers the file specified by Path in the system registry so
  that it will automatically be executed by the system at the next logon. The
  ExecKind parameter specifies the details about user vs. machine and once vs. always.
  You can have an application executed once at the next logon (ekMachineRunOnce,
  ekUserRunOnce) or at each logon (ekMachineRun, ekUserRun). The Machine and User
  specify for 'all users' or the 'current user only' respectively. Note that except
  for ekMachineRun and ekMachineRunOnce, all registered executables execute
  asynchronously. The ekServiceRun and ekServiceRunOnce exist to simulate NT services
  on Windows 9x and are probably of not much use. You can use the UnregisterAutoExec
  function to remove the entry for the registry when autoexecution is no longer
  desired.
Parameters:
  ExecKind - Specifies how to register the executable. See TExecKind for more information.
  Name - Name of the registry value to add.
  Path - The command line of an executable file including command line parameters to register for auto execution.
Result:
  If the function succeeds it returns True, otherwise it returns False. Note that
  calling RegisterAutoExec with ekServiceRun or ekServiceRunOnce on Windows NT/2000
  always causes the function to return False (the file is not registered).
See also:
  UnregisterAutoExec
  TExecKind
Donator:
  Marcel van Brakel
--------------------------------------------------------------------------------
@@TExecKind
<GROUP RegistryandInifiles.Registry>
Summary:
  Enumeration used by RegisterAutoExec to specify the desired autoexec kind.
Description:
  Enumeration used by RegisterAutoExec to specify the desired autoexec kind.
See also:
  UnregisterAutoExec
  RegisterAutoExec
Donator:
  Marcel van Brakel
@@TExecKind.ekMachineRun
<GROUP RegistryandInifiles.Registry>
  Register under HKLM\..\Run. This will execute the specified file each time at logon for each user, until it is unregistered.
@@TExecKind.ekMachineRunOnce
<GROUP RegistryandInifiles.Registry>
  Register under HKLM\..\RunOnce. This will execute the specified file once at the next logon independent of which user logs on.
@@TExecKind.ekUserRun
<GROUP RegistryandInifiles.Registry>
  Register under HKCU\..\Run. This will execute the specified file each time at logon for the current user, until it is unregistered.
@@TExecKind.ekUserRunOnce
<GROUP RegistryandInifiles.Registry>
  Register under HKCU\..\RunOnce. This will execute the specified file once at the next logon for the current user.
@@TExecKind.ekServiceRun
<GROUP RegistryandInifiles.Registry>
  Register under HKCU\..\RunServices. Not supported on NT - simulates services on Windows 9x. The specified file is executed before each logon untl it is unregistered.
@@TExecKind.ekServiceRunOnce
<GROUP RegistryandInifiles.Registry>
  Register under HKCU\..\RunServicesOnce. Not supported on NT - simulates services on Windows 9x. The specified file is executed once before the next logon.
--------------------------------------------------------------------------------
@@RegGetValueNames
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a list of value names from the registry.
Description:
  Use RegGetValueNames to obtain a list of values contained in the specified registry key.
  The string list is cleared before the values are added.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value list is located, relative to RootKey.
  List - This string list will contain the names of the values.
Result:
  If the function succeeds it returns True. If it fails it returns False.
  Failure is normally caused by either a nonexistent key or insufficient
  permissions on Windows NT.
  No values gives success not failure.
See also:
  RegGetKeyNames
Donator:
  Peter Friese
--------------------------------------------------------------------------------
@@RegGetKeyNames
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a list of key names from the registry.
Description:
  RegGetKeyNames returns a list of the specified key's subkeys.
  The string list is cleared before the values are added.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) where the desired value list is located, relative to RootKey.
  List - On exit, this string list will contain the names of the values. The caller is responsible for creating and destroying this list.
Result:
  If the function succeeds it returns True. If it fails it returns False.
  Failure is normally caused by either a nonexistent key or insufficient
  permissions on Windows NT.
  No subkeys gives success not failure.
See also:
  RegGetValueNames
  RegHasSubKeys
Donator:
  Peter Friese
--------------------------------------------------------------------------------
@@RegHasSubKeys
<GROUP RegistryandInifiles.Registry>
Summary:
  Checks whether the specified key has any children.
Description:
  RegHasSubKeys checks whether the subkey specified by Key has any subkeys. Use this
  function when you want to browse the registry hierarchically.
Parameters:
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
  Key - The key (path) that is to be checked, relative to RootKey.
Result:
  If there are any children of the specified key, the function will return True.
  If there are no children, it will return False.
See also:
  RegGetKeyNames
  RegGetValueNames
Donator:
  Peter Friese
--------------------------------------------------------------------------------
@@RegSaveList
<GROUP RegistryandInifiles.Registry>
Summary:
  Saves a stringlist to the registry.
Description:
  The list of strings is saved in the registry as under the key
  "RootKey\Key\ListName" with each string stored as registry value named
  "1", "2", etc. The number of items in the list is stored as DWORD value
  'Items'.
Parameters:
  RootKey - The rootkey to write the list to, one of the HKEY_XXX constants.
  Key - The key (path) to write the list to, relative to RootKey.
  ListName - Name of the subkey relative to Key to write the list to.
  Items - List of the items to store in the registry.
Result:
  The function returns True if the key "RootKey\Key\ListName" could be
  created False otherwise.
See also:
  RegLoadList
Donator:
  Robert Marquardt
--------------------------------------------------------------------------------
@@RegLoadList
<GROUP RegistryandInifiles.Registry>
Summary:
  Reads a stringlist from the registry.
Description:
  RegLoadList reads a list of strings from the registry which was stored
  with RegSaveList. The function expects to find a DWORD value
  named 'Items' under the key "RootKey\Key\ListName" and reads in the amount
  of entries stored therein.
Parameters:
  RootKey - The rootkey to read the list from, one of the HKEY_XXX constants.
  Key - The key (path) to read the list from, relative to RootKey.
  ListName - Name of the subkey relative to Key to read the list from.
  SaveTo - List of the items to load from the registry.
Result:
  The function returns True if a list with at least one element is read in.
  If 'Items' does not exist the function throws an exception.
See also:
  RegSaveList
  RegDelList
Donator:
  Robert Marquardt
--------------------------------------------------------------------------------
@@RegDelList
<GROUP RegistryandInifiles.Registry>
Summary:
  Deletes a stringlist from the registry.
Description:
  RegDelList deletes a list of strings from the registry which was stored
  with RegSaveList. The function expects to find a DWORD value
  named 'Items' under the key "RootKey\Key\ListName" and deletes the values
  named "1", "2", etc.
  If 'Items' is negative then nothing is deleted.
Parameters:
  RootKey - The rootkey to delete the list from, one of the HKEY_XXX constants.
  Key - The key (path) to delete the list from, relative to RootKey.
  ListName - Name of the subkey relative to Key to delete the list from.
Result:
  The function returns True if it finds a value named 'Items' and all the
  values of the list False otherwise. If the number of items is 0 then
  'Items' is deleted, but the function returns False.
See also:
  RegSaveList
  RegLoadList
Donator:
  Robert Marquardt
--------------------------------------------------------------------------------
@@RegKeyExists
<GROUP RegistryandInifiles.Registry>
Summary:
  The function RegKeyExists checks if the specified registry key exists.
Description:
  The function RegKeyExists checks if the specified registry key exists.
Parameters:
  Key - Registry key (path) to be checked, relative to RootKey.
  RootKey - The rootkey from which to read, one of the HKEY_XXX constants.
Result:
  If the key specified the function returns True, otherwise it returns False.
Donator:
  Marcel van Brakel
--------------------------------------------------------------------------------
@@EJclRegistryError
<GROUP RegistryandInifiles.Registry>
Summary:
  Error class, the instance of which is raised by functions from Registry.pas JCL unit.
Description:
  Error class, the instance of which is raised by functions from Registry.pas JCL unit.
Platforms:
  Windows NT/2000/XP/Vista: Requires Windows NT 3.1 or later.
  Windows 95/98: Requires Windows 95 or later.
Donator:
  Marcel van Brakel
--------------------------------------------------------------------------------
@@RegGetDataSize
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
--------------------------------------------------------------------------------
@@RegGetDataType
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
--------------------------------------------------------------------------------
@@RegReadCardinal
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadCardinalDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadCardinal>
--------------------------------------------------------------------------------
@@RegReadInt64
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadInt64Def
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadInt64>
--------------------------------------------------------------------------------
@@RegReadUInt64
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadUInt64Def
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadUInt64>
--------------------------------------------------------------------------------
@@RegReadAnsiString
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadAnsiStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadAnsiString>
--------------------------------------------------------------------------------
@@RegReadWideString
<GROUP RegistryandInifiles.Registry>
Description: 
  TODO
Donator:
  Anonymous
@@RegReadWideStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadWideString>
--------------------------------------------------------------------------------
@@RegReadMultiString
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadMultiStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadMultiString>
--------------------------------------------------------------------------------
@@RegReadMultiAnsiString
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadMultiAnsiStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadMultiAnsiString>
--------------------------------------------------------------------------------
@@RegReadMultiWideString
<GROUP RegistryandInifiles.Registry>
Description:
  TODO
Donator:
  Anonymous
@@RegReadMultiWideStringDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadMultiWideString>
--------------------------------------------------------------------------------
@@RegReadDWORD
<GROUP RegistryandInifiles.Registry>
Summary:
  This functions read invalid 8 byte REG_DWORD values.
Notes:
  Obsolete, use RegReadInt64 instead.
Contributor:
  Anonymous
@@RegReadDWORDDef
<GROUP RegistryandInifiles.Registry>
<COMBINE RegReadDWORD>
--------------------------------------------------------------------------------
@@RegWriteDWORD
<GROUP RegistryandInifiles.Registry>
Summary:
  RegWriteDWORD creates invalid 8 byte REG_DWORD keys.
Notes:
  Obsolete, use RegWriteInt64 instead (which creates REG_QWORD values).
Donator:
  Anonymous
--------------------------------------------------------------------------------

{$IFDEF MSWINDOWS}

type
  TGetCalendarInfoA = function (Locale: LCID; Calendar: CALID; CalType: CALTYPE;
    lpCalData: LPSTR; cchData: Integer; lpValue: LPDWORD): Integer; stdcall;

var
  _GetCalendarInfoA: TGetCalendarInfoA = nil;

function GetCalendarInfoA(Locale: LCID; Calendar: CALID; CalType: CALTYPE;
  lpCalData: LPSTR; cchData: Integer; lpValue: LPDWORD): Integer;
begin
  GetProcedureAddress(Pointer(@_GetCalendarInfoA), kernel32, 'GetCalendarInfoA');
  Result := _GetCalendarInfoA(Locale, Calendar, CalType, lpCalData, cchData, lpValue);
end;

type
  TGetCalendarInfoW = function (Locale: LCID; Calendar: CALID; CalType: CALTYPE;
    lpCalData: LPWSTR; cchData: Integer; lpValue: LPDWORD): Integer; stdcall;

var
  _GetCalendarInfoW: TGetCalendarInfoW = nil;

function GetCalendarInfoW(Locale: LCID; Calendar: CALID; CalType: CALTYPE;
  lpCalData: LPWSTR; cchData: Integer; lpValue: LPDWORD): Integer;
begin
  GetProcedureAddress(Pointer(@_GetCalendarInfoW), kernel32, 'GetCalendarInfoW');
  Result := _GetCalendarInfoW(Locale, Calendar, CalType, lpCalData, cchData, lpValue);
end;

type
  TEnumCalendarInfoExW = function (lpCalInfoEnumProcEx: CALINFO_ENUMPROCEXW;
    Locale: LCID; Calendar: CALID; CalType: CALTYPE): BOOL; stdcall;

var
  _EnumCalendarInfoExW: TEnumCalendarInfoExW = nil;

function EnumCalendarInfoExW(lpCalInfoEnumProcEx: CALINFO_ENUMPROCEXW;
  Locale: LCID; Calendar: CALID; CalType: CALTYPE): BOOL;
begin
  GetProcedureAddress(Pointer(@_EnumCalendarInfoExW), kernel32, 'EnumCalendarInfoExW');
  Result := _EnumCalendarInfoExW(lpCalInfoEnumProcEx, Locale, Calendar, CalType);
end;

{$ENDIF MSWINDOWS}

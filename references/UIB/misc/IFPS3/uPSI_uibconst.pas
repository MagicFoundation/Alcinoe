unit uPSI_uibconst;
{
This file has been generated by UnitParser v0.7, written by M. Knight
and updated by NP. v/d Spek and George Birbilis.
Source Code from Carlo Kok has been used to implement various sections of
UnitParser. Components of ROPS are used in the construction of UnitParser,
code implementing the class wrapper is taken from Carlo Kok's conv utility

}
interface
{$I uib.inc}
uses
   SysUtils
  ,Classes
  ,uPSComponent
  ,uPSRuntime
  ,uPSCompiler
  ;
 
type 
(*----------------------------------------------------------------------------*)
  TPSImport_uibconst = class(TPSPlugin)
  protected
    procedure CompileImport1(CompExec: TPSScript); override;
  end;
 
 
{ compile-time registration functions }
procedure SIRegister_uibconst(CL: TPSPascalCompiler);

{ run-time registration functions }

procedure Register;

implementation


uses
   uibconst
  ;
 
 
procedure Register;
begin
  RegisterComponents('Pascal Script', [TPSImport_uibconst]);
end;

(* === compile-time registration functions === *)
(*----------------------------------------------------------------------------*)
procedure SIRegister_uibconst(CL: TPSPascalCompiler);
begin
  CL.AddTypeS('TServerCommand', '( scGetClassObject, scInvokeMethod )');
  CL.AddTypeS('TOIDDatabase', '( OIDDomain, OIDTable, OIDView, OIDProcedure, OI'
   +'DGenerator, OIDException, OIDUDF, OIDRole, OIDDBCharset )');
  CL.AddTypeS('TOIDDatabases', 'set of TOIDDatabase');
  CL.AddTypeS('TOIDTable', '( OIDTableField, OIDPrimary, OIDForeign, OIDTableTr'
   +'igger, OIDUnique, OIDIndex, OIDCheck )');
  CL.AddTypeS('TOIDTables', 'set of TOIDTable');
  CL.AddTypeS('TOIDView', '( OIDViewFields, OIDViewTrigers )');
  CL.AddTypeS('TOIDViews', 'set of TOIDView');
  CL.AddTypeS('TOIDProcedure', '( OIDProcFieldIn, OIDProcFieldOut )');
  CL.AddTypeS('TOIDProcedures', 'set of TOIDProcedure');
  CL.AddTypeS('TOIDUDF', '( OIDUDFField )');
  CL.AddTypeS('TOIDUDFs', 'set of TOIDUDF');
 CL.AddConstantN('ALLOBjects','LongInt').Value.ts32 := ord(OIDDomain) or ord(OIDTable) or ord(OIDView) or ord(OIDProcedure) or ord(OIDGenerator) or ord(OIDException) or ord(OIDUDF) or ord(OIDRole) or ord(OIDDBCharset);
 CL.AddConstantN('ALLTables','LongInt').Value.ts32 := ord(OIDTableField) or ord(OIDPrimary) or ord(OIDForeign) or ord(OIDTableTrigger) or ord(OIDUnique) or ord(OIDIndex) or ord(OIDCheck);
 CL.AddConstantN('ALLViews','LongInt').Value.ts32 := ord(OIDViewFields) or ord(OIDViewTrigers);
 CL.AddConstantN('ALLProcedures','LongInt').Value.ts32 := ord(OIDProcFieldIn) or ord(OIDProcFieldOut);
 CL.AddConstantN('ALLUDFs','LongInt').Value.ts32 := ord(OIDUDFField);
end;

(* === run-time registration functions === *)
 
 
{ TPSImport_uibconst }
(*----------------------------------------------------------------------------*)
procedure TPSImport_uibconst.CompileImport1(CompExec: TPSScript);
begin
  SIRegister_uibconst(CompExec.Comp);
end;
(*----------------------------------------------------------------------------*)
 
 
end.

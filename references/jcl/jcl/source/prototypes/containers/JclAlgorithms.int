(*$JPPDEFINEMACRO MOVEARRAYINT(MOVEARRAYPROCEDURENAME, DYNARRAYTYPENAME, OVERLOAD)
{$IFDEF GENERIC}
procedure MOVEARRAYPROCEDURENAME(var List: DYNARRAYTYPENAME; FromIndex, ToIndex, Count: SizeInt);OVERLOAD
{$ELSE ~GENERIC}
{$IFDEF REFCOUNTED}
procedure FinalizeArrayBeforeMove(var List: DYNARRAYTYPENAME; FromIndex, ToIndex, Count: SizeInt);OVERLOAD
  {$IFDEF SUPPORTS_INLINE} inline; {$ENDIF}
procedure InitializeArray(var List: DYNARRAYTYPENAME; FromIndex, Count: SizeInt);OVERLOAD
  {$IFDEF SUPPORTS_INLINE} inline; {$ENDIF}
procedure InitializeArrayAfterMove(var List: DYNARRAYTYPENAME; FromIndex, ToIndex, Count: SizeInt);OVERLOAD
  {$IFDEF SUPPORTS_INLINE} inline; {$ENDIF}
{$ELSE ~REFCOUNTED}
{$IFDEF ZEROINIT}
procedure InitializeArrayAfterMove(var List: DYNARRAYTYPENAME; FromIndex, ToIndex, Count: SizeInt);OVERLOAD
  {$IFDEF SUPPORTS_INLINE} inline; {$ENDIF}
{$ENDIF ZEROINIT}
{$ENDIF ~REFCOUNTED}
procedure MOVEARRAYPROCEDURENAME(var List: DYNARRAYTYPENAME; FromIndex, ToIndex, Count: SizeInt);OVERLOAD{$ENDIF ~GENERIC}*)
(*$JPPDEFINEMACRO ITERATEINT(ITERATEPROCEDURENAME, ITRINTERFACENAME, ITERATEPROCEDURETYPENAME, OVERLOAD)
procedure ITERATEPROCEDURENAME(const First: ITRINTERFACENAME; Count: Integer; F: ITERATEPROCEDURETYPENAME);OVERLOAD*)
(*$JPPDEFINEMACRO APPLYINT(APPLYPROCEDURENAME, ITRINTERFACENAME, APPLYFUNCTIONTYPENAME, OVERLOAD)
procedure APPLYPROCEDURENAME(const First: ITRINTERFACENAME; Count: Integer; F: APPLYFUNCTIONTYPENAME);OVERLOAD*)
(*$JPPDEFINEMACRO SIMPLECOMPAREINT(SIMPLECOMPAREFUNCTIONNAME, CONSTKEYWORD, TYPENAME)
function SIMPLECOMPAREFUNCTIONNAME(CONSTKEYWORDObj1, Obj2: TYPENAME): Integer;*)
(*$JPPDEFINEMACRO SIMPLEEQUALITYCOMPAREINT(SIMPLEEQUALITYCOMPAREFUNCTIONNAME, CONSTKEYWORD, TYPENAME)
function SIMPLEEQUALITYCOMPAREFUNCTIONNAME(CONSTKEYWORDObj1, Obj2: TYPENAME): Boolean;*)
(*$JPPDEFINEMACRO SIMPLEHASHCONVERTINT(SIMPLEHASHCONVERTFUNCTIONNAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME)
function SIMPLEHASHCONVERTFUNCTIONNAME(CONSTKEYWORDPARAMETERNAME: TYPENAME): Integer;*)
(*$JPPDEFINEMACRO FINDINT(FINDFUNCTIONNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, COMPAREFUNCTIONTYPENAME, TYPENAME, OVERLOAD)
function FINDFUNCTIONNAME(const First: ITRINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME;
  AComparator: COMPAREFUNCTIONTYPENAME): ITRINTERFACENAME;OVERLOAD*)
(*$JPPDEFINEMACRO FINDEQINT(FINDFUNCTIONNAME,ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, EQUALITYCOMPAREFUNCTIONTYPENAME, TYPENAME, OVERLOAD)
function FINDFUNCTIONNAME(const First: ITRINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME;
  AEqualityComparator: EQUALITYCOMPAREFUNCTIONTYPENAME): ITRINTERFACENAME;OVERLOAD*)
(*$JPPDEFINEMACRO COUNTOBJECTINT(COUNTOBJECTFUNCTIONNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, COMPAREFUNCTIONTYPENAME, TYPENAME, OVERLOAD)
function COUNTOBJECTFUNCTIONNAME(const First: ITRINTERFACENAME; Count: Integer;
  CONSTKEYWORDPARAMETERNAME: TYPENAME; AComparator: COMPAREFUNCTIONTYPENAME): Integer;OVERLOAD*)
(*$JPPDEFINEMACRO COUNTOBJECTEQINT(COUNTOBJECTFUNCTIONNAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, EQUALITYCOMPAREFUNCTIONTYPENAME, TYPENAME, OVERLOAD)
function COUNTOBJECTFUNCTIONNAME(const First: ITRINTERFACENAME; Count: Integer;
  CONSTKEYWORDPARAMETERNAME: TYPENAME; AEqualityComparator: EQUALITYCOMPAREFUNCTIONTYPENAME): Integer;OVERLOAD*)
(*$JPPDEFINEMACRO COPYINT(COPYPROCEDURENAME, ITRINTERFACENAME, OVERLOAD)
procedure COPYPROCEDURENAME(const First: ITRINTERFACENAME; Count: Integer;
  const Output: ITRINTERFACENAME);OVERLOAD*)
(*$JPPDEFINEMACRO GENERATEINT(GENERATEPROCEDURENAME, LISTINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME, OVERLOAD)
procedure GENERATEPROCEDURENAME(const List: LISTINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME);OVERLOAD*)
(*$JPPDEFINEMACRO FILLINT(FILLPROCEDURENAME, ITRINTERFACENAME, CONSTKEYWORD, PARAMETERNAME, TYPENAME, OVERLOAD)
procedure FILLPROCEDURENAME(const First: ITRINTERFACENAME; Count: Integer; CONSTKEYWORDPARAMETERNAME: TYPENAME);OVERLOAD*)
(*$JPPDEFINEMACRO REVERSEINT(REVERSEPROCEDURENAME, ITRINTERFACENAME, OVERLOAD)
procedure REVERSEPROCEDURENAME(const First, Last: ITRINTERFACENAME);OVERLOAD*)
(*$JPPDEFINEMACRO SORTINT(SORTPROCEDURENAME, LISTINTERFACENAME, LEFT, RIGHT, COMPAREFUNCTIONTYPENAME, OVERLOAD)
procedure SORTPROCEDURENAME(const AList: LISTINTERFACENAME; LEFT, RIGHT: Integer; AComparator: COMPAREFUNCTIONTYPENAME);OVERLOAD*)
(*$JPPDEFINEMACRO QUICKSORTINT(QUICKSORTPROCEDURENAME, LISTINTERFACENAME, LEFT, RIGHT, COMPAREFUNCTIONTYPENAME, OVERLOAD)
procedure QUICKSORTPROCEDURENAME(const AList: LISTINTERFACENAME; LEFT, RIGHT: Integer; AComparator: COMPAREFUNCTIONTYPENAME);OVERLOAD*)
{$IFDEF MSWINDOWS}

type
  _THREAD_INFORMATION_CLASS = type Cardinal;
  {$EXTERNALSYM _THREAD_INFORMATION_CLASS}
  THREAD_INFORMATION_CLASS = _THREAD_INFORMATION_CLASS;
  {$EXTERNALSYM THREAD_INFORMATION_CLASS}
  PTHREAD_INFORMATION_CLASS = ^_THREAD_INFORMATION_CLASS;
  {$EXTERNALSYM PTHREAD_INFORMATION_CLASS}

const
  ThreadBasicInformation          = 0;
  {$EXTERNALSYM ThreadBasicInformation}
  ThreadTimes                     = 1;
  {$EXTERNALSYM ThreadTimes}
  ThreadPriority                  = 2;
  {$EXTERNALSYM ThreadPriority}
  ThreadBasePriority              = 3;
  {$EXTERNALSYM ThreadBasePriority}
  ThreadAffinityMask              = 4;
  {$EXTERNALSYM ThreadAffinityMask}
  ThreadImpersonationToken        = 5;
  {$EXTERNALSYM ThreadImpersonationToken}
  ThreadDescriptorTableEntry      = 6;
  {$EXTERNALSYM ThreadDescriptorTableEntry}
  ThreadEnableAlignmentFaultFixup = 7;
  {$EXTERNALSYM ThreadEnableAlignmentFaultFixup}
  ThreadEventPair                 = 8;
  {$EXTERNALSYM ThreadEventPair}
  ThreadQuerySetWin32StartAddress = 9;
  {$EXTERNALSYM ThreadQuerySetWin32StartAddress}
  ThreadZeroTlsCell               = 10;
  {$EXTERNALSYM ThreadZeroTlsCell}
  ThreadPerformanceCount          = 11;
  {$EXTERNALSYM ThreadPerformanceCount}
  ThreadAmILastThread             = 12;
  {$EXTERNALSYM ThreadAmILastThread}
  ThreadIdealProcessor            = 13;
  {$EXTERNALSYM ThreadIdealProcessor}
  ThreadPriorityBoost             = 14;
  {$EXTERNALSYM ThreadPriorityBoost}
  ThreadSetTlsArrayAddress        = 15;
  {$EXTERNALSYM ThreadSetTlsArrayAddress}
  ThreadIsIoPending               = 16;
  {$EXTERNALSYM ThreadIsIoPending}
  ThreadHideFromDebugger          = 17;
  {$EXTERNALSYM ThreadHideFromDebugger}

type
  _CLIENT_ID = record
    UniqueProcess: THandle;
    UniqueThread: THandle;
  end;
  {$EXTERNALSYM _CLIENT_ID}
  CLIENT_ID = _CLIENT_ID;
  {$EXTERNALSYM CLIENT_ID}
  PCLIENT_ID = ^CLIENT_ID;
  {$EXTERNALSYM PCLIENT_ID}

  KAFFINITY = ULONG;
  {$EXTERNALSYM KAFFINITY}

  KPRIORITY = LongInt;
  {$EXTERNALSYM KPRIORITY}

  _THREAD_BASIC_INFORMATION = record
    ExitStatus: NTSTATUS;
    TebBaseAddress: Pointer;
    ClientId: CLIENT_ID;
    AffinityMask: KAFFINITY;
    Priority: KPRIORITY;
    BasePriority: KPRIORITY;
  end;
  {$EXTERNALSYM _THREAD_BASIC_INFORMATION}
  THREAD_BASIC_INFORMATION = _THREAD_BASIC_INFORMATION;
  {$EXTERNALSYM THREAD_BASIC_INFORMATION}
  PTHREAD_BASIC_INFORMATION = ^_THREAD_BASIC_INFORMATION;
  {$EXTERNALSYM PTHREAD_BASIC_INFORMATION}

function NtQueryInformationThread(ThreadHandle: THandle; ThreadInformationClass: THREAD_INFORMATION_CLASS;
  ThreadInformation: Pointer; ThreadInformationLength: ULONG; ReturnLength: PULONG): NTSTATUS; stdcall;
{$EXTERNALSYM NtQueryInformationThread}

{$ENDIF MSWINDOWS}

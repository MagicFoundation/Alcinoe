<?xml version="1.0"?>

<!--
  Project: ZeosLib. Document Generation
  Module: Build & Test Environment.
  Copyrights: (c) Modular Mining Systems, Inc. 2001-2003
  Author: Sergey Seroukhov
  Date: 27 october 2003
  
  Calling conventions:
    docbook <source.path> <target.path> <doctype> <document>

  Parameters:
    doctype = all | html | xhtml | pdf | chunk | hh | text
-->

<project name="docbook" default="main" basedir=".">

  <property file="build.properties" />

  <property name="root.dir" value="${project.home}"/>
  <property name="build.dir" value="${root.dir}/build"/>
  <property name="source.dir" value="${source.path}"/>
  <property name="target.dir" value="${target.path}"/>
  <property name="temp.dir" value="${target.path}/temp"/>

  <property name="log.file" value="${logfile}"/>

  <property name="hhc" value="${hhc.home}/hhc.exe" />
  <property name="fop" value="${fop.home}/fop.bat" />
  <property name="bash" value="${cygwin.home}/bin/bash" />
  <property name="xmlto" value="/bin/xmlto" />


  <target name="main">

    <condition property="type.html">
      <or>
        <equals arg1="${doctype}" arg2="all"/>
        <equals arg1="${doctype}" arg2="html"/>
      </or>
    </condition>
    <antcall target="convert_html"/>

    <condition property="type.xhtml">
      <or>
        <equals arg1="${doctype}" arg2="all"/>
        <equals arg1="${doctype}" arg2="xhtml"/>
      </or>
    </condition>
    <antcall target="convert_xhtml"/>

    <condition property="type.chunk">
      <or>
        <equals arg1="${doctype}" arg2="all"/>
        <equals arg1="${doctype}" arg2="chunk"/>
      </or>
    </condition>
    <antcall target="convert_chunk"/>

    <condition property="type.pdf">
      <or>
        <equals arg1="${doctype}" arg2="all"/>
        <equals arg1="${doctype}" arg2="pdf"/>
      </or>
    </condition>
    <antcall target="convert_pdf"/>

    <condition property="type.hh">
      <or>
        <equals arg1="${doctype}" arg2="all"/>
        <equals arg1="${doctype}" arg2="hh"/>
      </or>
    </condition>
    <antcall target="convert_hh"/>

    <condition property="type.txt">
      <or>
        <equals arg1="${doctype}" arg2="all"/>
        <equals arg1="${doctype}" arg2="text"/>
      </or>
    </condition>
    <antcall target="convert_txt"/>

  </target>

  <target name="convert_html" if="type.html">

    <delete dir="${temp.dir}" failonerror="false"/>
    <mkdir dir="${temp.dir}"/>

    <copy file="${source.dir}/${document}.xml"
      tofile="${temp.dir}/${document}.xml"
      overwrite="true"/>
    <copy todir="${temp.dir}/images" failonerror="false">
      <fileset dir="${source.dir}/images">
        <include name="${document}*.*"/>
      </fileset>
    </copy>

    <exec dir="${temp.dir}" executable="${bash}"
      output="${log.file}" append="true" failonerror="true">
       <arg value="-c"/> 
       <arg value="${xmlto} --skip-validation html-nochunks ${document}.xml"/> 
    </exec>

    <copy todir="${target.dir}" overwrite="true">
      <fileset dir="${temp.dir}">
        <exclude name="${document}.xml"/>
      </fileset>
    </copy>
    <delete dir="${temp.dir}"/>

  </target>

  <target name="convert_xhtml" if="type.xhtml">

    <delete dir="${temp.dir}" failonerror="false"/>
    <mkdir dir="${temp.dir}"/>

    <copy file="${source.dir}/${document}.xml"
      tofile="${temp.dir}/${document}.xml"
      overwrite="true"/>
    <copy todir="${temp.dir}/images" failonerror="false">
      <fileset dir="${source.dir}/images">
        <include name="${document}*.*"/>
      </fileset>
    </copy>

    <exec dir="${temp.dir}" executable="${bash}"
      output="${log.file}" append="true" failonerror="true">
       <arg value="-c"/> 
       <arg value="${xmlto} --skip-validation xhtml-nochunks ${document}.xml"/> 
    </exec>

    <copy todir="${target.dir}" overwrite="true">
      <fileset dir="${temp.dir}">
        <exclude name="${document}.xml"/>
      </fileset>
    </copy>
    <delete dir="${temp.dir}"/>

  </target>

  <target name="convert_chunk" if="type.chunk">

    <delete dir="${temp.dir}" failonerror="false"/>
    <mkdir dir="${temp.dir}/${document}"/>

    <copy file="${source.dir}/${document}.xml"
      tofile="${temp.dir}/${document}/${document}.xml"
      overwrite="true"/>
    <copy todir="${temp.dir}/${document}/images" failonerror="false">
      <fileset dir="${source.dir}/images">
        <include name="${document}*.*"/>
      </fileset>
    </copy>

    <exec dir="${temp.dir}/${document}" executable="${bash}"
      output="${log.file}" append="true" failonerror="true">
       <arg value="-c"/> 
       <arg value="${xmlto} --skip-validation html ${document}.xml"/> 
    </exec>

    <copy todir="${target.dir}" overwrite="true">
      <fileset dir="${temp.dir}">
        <exclude name="**/${document}.xml"/>
      </fileset>
    </copy>
    <delete dir="${temp.dir}"/>

  </target>

  <target name="convert_pdf" if="type.pdf">

    <delete dir="${temp.dir}" failonerror="false"/>
    <mkdir dir="${temp.dir}"/>

    <copy file="${source.dir}/${document}.xml"
      tofile="${temp.dir}/${document}.xml"
      overwrite="true"/>
    <copy todir="${temp.dir}/images" failonerror="false">
      <fileset dir="${source.dir}/images">
        <include name="${document}*.*"/>
      </fileset>
    </copy>

    <exec dir="${temp.dir}" executable="${bash}"
      output="${log.file}" append="true" failonerror="true">
       <arg value="-c"/> 
       <arg value="${xmlto} --skip-validation fo ${document}.xml"/> 
    </exec>

    <exec executable="${fop}" failonerror="true"
      output="${log.file}" append="true" >
      <arg line="${temp.dir}/${document}.fo"/>
      <arg line="${target.dir}/${document}.pdf"/>
    </exec>

    <delete dir="${temp.dir}"/>

  </target>

  <target name="convert_hh" if="type.hh">
    <delete dir="${temp.dir}" failonerror="false"/>
    <mkdir dir="${temp.dir}"/>

    <copy file="${source.dir}/${document}.xml"
      tofile="${temp.dir}/${document}.xml"
      overwrite="true"/>
    <copy todir="${temp.dir}/images" failonerror="false">
      <fileset dir="${source.dir}/images">
        <include name="${document}*.*"/>
      </fileset>
    </copy>

    <exec dir="${temp.dir}" executable="${bash}"
      output="${log.file}" append="true" failonerror="true">
       <arg value="-c"/> 
       <arg value="${xmlto} --skip-validation htmlhelp ${document}.xml"/> 
    </exec>

    <exec dir="${temp.dir}" executable="${hhc}"
      output="${log.file}" append="true" >
      <arg value="htmlhelp.hhp"/> 
    </exec>

    <move file="${temp.dir}/htmlhelp.chm"
      tofile="${target.path}/${document}.chm" overwrite="true"/>
    <delete dir="${temp.dir}"/>
  </target>

  <target name="convert_txt" if="type.txt">

    <delete dir="${temp.dir}" failonerror="false"/>
    <mkdir dir="${temp.dir}"/>

    <copy file="${source.dir}/${document}.xml"
      tofile="${temp.dir}/${document}.xml"
      overwrite="true"/>

    <exec dir="${temp.dir}" executable="${bash}"
      output="${log.file}" append="true" failonerror="true">
       <arg value="-c"/> 
       <arg value="${xmlto} --skip-validation txt ${document}.xml"/> 
    </exec>

    <copy todir="${target.dir}" overwrite="true">
      <fileset dir="${temp.dir}">
        <exclude name="${document}.xml"/>
      </fileset>
    </copy>
    <delete dir="${temp.dir}"/>

  </target>

</project>